/*! FactoryJS 0.3.3 */
(function(){var a=[].slice,b=[].indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(b in this&&this[b]===a)return b;return-1};define(["underscore","jquery","backbone"],function(c,d,e){var f;return f=function(){function f(a,b){null==b&&(b={}),this.mixins={},this.tagCbs={},this.tagMap={},this.promises={},this.instances={},this.definitions={},this.define("Base",a),this.baseTags=b.baseTags||[],this.on("create",this.handleCreate,this)}return c.extend(f.prototype,e.Events),f.prototype.define=function(a,b,f){var g,h,i,j,k=this;if(null==f&&(f={}),null!=this.definitions[a]&&!f.override){if(f.silent)return this;throw h="Definition already exists :: "+a+" :: user overide option to ignore",new Error(h)}return null==(j=this.promises)[a]&&(j[a]=d.Deferred()),g={options:f},c.isFunction(b.extend)||(b.extend=e.Model.extend),g.constructor=c.isFunction(b)?b:function(){return c.clone(b)},g.constructor.prototype.__factory=function(){return k},i=[a].concat(f.tags).concat(this.baseTags),g.tags=c.uniq(i).filter(function(a){return!!a}),this.instances[a]=[],c.each(g.tags,function(a){return k.tagMap[a]=k.tagMap[a]||[],k.tagCbs[a]=k.tagCbs[a]||[]}),this.definitions[a]=g,this.trigger("define",a,g,f),this.promises[a].resolve(this,a),this},f.prototype.hasDefinition=function(a){return!!this.definitions[a]},f.prototype.whenDefined=function(a){var b;return null==(b=this.promises)[a]&&(b[a]=d.Deferred()),this.promises[a].promise()},f.prototype.fetchDefinition=function(a){var b,c=this;return b=this.whenDefined(a),require([a],function(b){return c.define(a,b)}),b},f.prototype.extend=function(a,b,d,e){var f,g;if(null==e&&(e={}),f=this.definitions[a],g="Base Class Not Available :: "+a,!f)throw new Error(g);if(g="Invalid Parameter Definition ::\nexpected object ::\ngot "+d.constructor.prototype.toString(),!c.isObject(d))throw new Error(g);return e.tags=[].concat(f.tags,e.tags),this.define(b,f.constructor.extend(d),e)},f.prototype.clone=function(a){var b,d=this;if(b="Invalid Argument :: Expected Factory",!(a instanceof f))throw new Error(b);return c.each(["definitions","mixins","promises"],function(b){return c.defaults(d[b],a[b]),"definitions"===b?c.each(d[b],function(a,c){return d[b][c].constructor.prototype.__factory=function(){return d}}):void 0})},f.prototype.mirror=function(a){var b=this;return this.clone(a),a.on("define",function(a,d,e){return b.define(a,d.constructor,c.extend({silent:!0},e))}),a.on("defineMixin",this.defineMixin,this)},f.prototype.defineMixin=function(a,b,c){var d;if(null==c&&(c={}),null!=this.mixins[a]&&!c.override)throw d="Mixin already defined :: "+a+" :: use override option to ignore",new Error(d);return this.mixins[a]=b,this.trigger("defineMixin",a,b,c),this},f.prototype.applyMixin=function(a,b,d){var e;if(e=this.mixins[b],!e)throw new Error("Mixin Not Defined :: "+b);return a.mixinOptions||(a.mixinOptions={}),c.defaults(a.mixinOptions,d,e.mixinOptions||{}),c.extend(a,c.omit(e,"mixinOptions")),c.isFunction(a.mixinitialize)&&(a.mixinitialize(),a.mixinitialize=function(){}),a},f.prototype.handleMixins=function(a,b){var d=this;return c.each(b,function(b){return d.applyMixin(a,b,a.mixinOptions)}),a.__mixin=c.chain(this.applyMixin).bind(this).partial(a).value()},f.prototype.handleInjections=function(a,b){var d=this;return c.each(b,function(b){return a[b]=d.get(b)})},f.prototype.handleCreate=function(a){var b=this;return c.each(a.__tags(),function(d){var e;return null==b.tagCbs[d]&&(b.tagCbs[d]=[]),e=b.tagCbs[d],0!==e.length?c.each(e,function(b){return c.isFunction(b)?b(a):void 0}):void 0})},f.prototype.handleTags=function(a,b,d){var e,f=this;return this.instances[a].push(b),b.__type=function(){return a},b.__tags=function(){return[].slice.call(d)},e=[this.instances[a]],c.each(d,function(a){return null==f.tagMap[a]&&(f.tagMap[a]=[]),f.tagMap[a].push(b),e.push(f.tagMap[a])}),b.__factoryMap=function(){return[].slice.call(e)}},f.prototype.get=function(){var b,d,e,f,g,h,i,j,k,l,m,n;if(k=arguments[0],b=2<=arguments.length?a.call(arguments,1):[],h=null!=(n=this.instances)[k]?(n=this.instances)[k]:n[k]=[],g=this.instances[k][0],e=this.definitions[k],i="Invalid Definition :: "+k+" :: not defined",null==e)throw new Error(i);return d=e.constructor,l=e.options||{},m=!!l.singleton,j=l.mixins||[],f=l.injections||[],m&&g?g:(g=function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(d,b,function(){}),this.handleMixins(g,j),this.handleInjections(g,f),this.handleTags(k,g,e.tags),c.isFunction(g.constructed)&&g.constructed.apply(g,b),g.__dispose=function(a){return function(){return a.dispose(this)}}(this),this.trigger("create",g),g)},f.prototype.verifyTags=function(a){return c.all(a.__factoryMap(),function(c){return b.call(c,a)>=0})},f.prototype.dispose=function(a){return c.each(a.__factoryMap(),function(c){var d;if(d="Instance Not In Factory :: "+a+" :: disposal failed!",b.call(c,a)<0)throw new Error(d);return c.splice(c.indexOf(a),1)}),this.trigger("dispose",a)},f.prototype.getConstructor=function(a,b){var d;return null==b&&(b=!1),b?this.definitions[a].constructor:(d=c.chain(this.get).bind(this).partial(a).value(),d.prototype=this.definitions[a].constructor.prototype,d)},f.prototype.onTag=function(a,b){var d,e;if(d="Invalid Argument :: "+typeof a+" provided :: expected String",!c.isString(a))throw new Error(d);if(d="Invalid Argument :: "+typeof b+" provided :: expected Function",!c.isFunction(b))throw new Error(d);return c.each(this.tagMap[a],b),null==(e=this.tagCbs)[a]&&(e[a]=[]),this.tagCbs[a].push(b)},f.prototype.offTag=function(a,b){var d,e;if(e="Invalid Argument :: "+typeof a+" provided :: expected String",!c.isString(a))throw new Error(e);if(null!=this.tagCbs[a]){if(!c.isFunction(b))return this.tagCbs[a]=[],void 0;if(d=this.tagCbs[a].indexOf(b),e="Callback Not Found :: "+b+" :: for tag "+a,-1===d)throw new Error(e);return this.tagCbs[a].splice(d,1)}},f.prototype.isType=function(a,b){return a.__type()===b},f.prototype.getType=function(a){return a.__type()},f}()})}).call(this);